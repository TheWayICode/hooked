stages:
  - test
  - build
  - deploy

# Run flake8 to check for code quality
lint-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 hooked
#
# Run the unit tests
api-unit-test-job:
  image: python:3-bullseye
  stage: test
  needs:
    - lint-test-job
  script:
    - cd hooked
    - pip install -r requirements.txt
    - python -m pytest

# Build the React/JavaScript front-end
<<<<<<< HEAD
build-ghi-service:
=======
>>>>>>> get_all_posts_unit_test
<<<<<<< HEAD
    PUBLIC_URL: https://hooked2.gitlab.io/module3-project-gamma/
    REACT_APP_USER_SERVICE_API_HOST: https://hooked.dec-pt-16.mod3projects.com
  script:
    - cd ghi
    - npm install --force
=======
    PUBLIC_URL: https://GROUP_NAME.gitlab.io/PROJECT_NAME/
    REACT_APP_HOOKED_API_HOST: https://WEBSERVICE_NAME.onrender.com
  script:
    - cd ghi
    - npm install
>>>>>>> get_all_posts_unit_test
    - npm run build
    - cp build/index.html build/404.html
  artifacts:
    paths:
      - ghi/build/

# Deploy the React/JavaScript front-end to GitLab pages
# pages:
#   stage: deploy
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#   dependencies:
#     - build-front-end-job
#   needs:
#     - build-front-end-job
#   script:
#     - mv ghi/build/ public
#   artifacts:
#     paths:
#       - public
